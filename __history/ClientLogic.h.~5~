//---------------------------------------------------------------------------
#include "MainUnit.h"

#ifndef ClientLogicH
#define ClientLogicH
//---------------------------------------------------------------------------
SOCKET Connection;
SOCKET ConnectSocket = INVALID_SOCKET;

const int TLG = 0;
const int TLF = 1;

enum Packet
{
	P_KEY,
	P_AUDIO
};

bool isEnabled = false;
bool isCalling = false;

int currentMod = 2;
int frequency = 30000;

//Number of available devices
int gRecordingDeviceCount = 0;

//Recieved audio spec
SDL_AudioSpec gReceivedRecordingSpec;
SDL_AudioSpec gReceivedPlaybackSpec;

//Recording data buffer
Uint8* gRecordingBuffer = NULL;

//Size of data buffer
Uint32 gBufferByteSize = 0;

//Position in data buffer
Uint32 gBufferBytePosition = 0;

//Maximum position in data buffer for recording
Uint32 gBufferByteMaxPosition = 0;

//Audio device IDs
SDL_AudioDeviceID recordingDeviceId = 0;
SDL_AudioDeviceID playbackDeviceId = 0;

//Maximum number of supported recording devices
const int MAX_RECORDING_DEVICES = 10;

//Maximum recording time
const int MAX_RECORDING_SECONDS = 1;

//Maximum recording time plus padding
const int RECORDING_BUFFER_SECONDS = MAX_RECORDING_SECONDS;

//The various recording actions we can take
enum RecordingState
{
	SETTING_DEVICE,
	START_RECORDING,
	RECORDING,
	START_PLAYBACK,
	PLAYBACK,
	AUDIO_ERROR
};

int connectToServer(char *IP, int Port);
void ClientHandler();
bool loadMedia();
#endif
